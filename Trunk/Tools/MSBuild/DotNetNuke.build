<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Compile" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- This file is responsible to compile DNN and if build is forced it will create requried packages.
		This file is also responsible to create DotNetNuke.vstemplate.
	-->

  <Import Project="$(MSBuildExtensionsPath)\MSBuildCommunityTasks\MSBuild.Community.Tasks.Targets" />
  <Import Project="AT.MSBuild.Tasks.Targets" />
  <UsingTask AssemblyFile="$(MSBuildCommunityTasksLib)" TaskName="MSBuild.Community.Tasks.IIS.WebDirectoryCreate" />
  <PropertyGroup>
    <RemoveNodePath Condition="'$(RemoveNodePath)' == ''">$(MSBuildExtensionsPath)\DotNetNuke.MSBuild.Tasks</RemoveNodePath>
    <RemoveNodeLib>$(RemoveNodePath)\DotNetNuke.MSBuild.Tasks.dll</RemoveNodeLib>
  </PropertyGroup>
  <UsingTask AssemblyFile="$(RemoveNodeLib)" TaskName="DotNetNuke.MSBuild.Tasks.RemoveNode" />

  <PropertyGroup>
    <ProjectSecName>DotNetNuke_5_Maintenance</ProjectSecName>
    <!-- Name of the directory where the packages are built (relatieve to working directory) -->
    <UpLevels>..\..\..\..\..\</UpLevels>
    <PackageBaseUrl>http://dnn-build/CCNet_Packages/$(ProjectSecName)/</PackageBaseUrl>
    <PackageDirectory>$(UpLevels)CCNet_Packages</PackageDirectory>
    <SourceFolder>..\..\</SourceFolder>
    <SourceCompletePath>$(MSBuildProjectDirectory)\$(SourceFolder)</SourceCompletePath>
  </PropertyGroup>

  <!-- properties for the VSTemplateTask -->
  <PropertyGroup>
    <RootPath>
    </RootPath>
    <OutputPath>
    </OutputPath>
    <Name>DotNetNuke Web Application Framework</Name>
    <Description>This template creates a DotNetNuke Web Application</Description>
    <ProjectType>Web</ProjectType>
    <ProjectSubType>VisualBasic</ProjectSubType>
    <SortOrder>1000</SortOrder>
    <CreateNewFolder>true</CreateNewFolder>
    <DefaultName>DotNetNuke Website</DefaultName>
    <ProvideDefaultName>true</ProvideDefaultName>
    <PromptForSaveOnCreation>true</PromptForSaveOnCreation>
    <EnableEditOfLocationField>true</EnableEditOfLocationField>
    <EnableLocationBrowseButton>true</EnableLocationBrowseButton>
    <LocationField>Hidden</LocationField>
    <Icon>DotNetNuke.ico</Icon>
  </PropertyGroup>

  <!-- Import Include/Exclude file lists from other file. -->
  <Import Project="FileList.msbuild" />

  <ItemGroup>
    <SkinPackages Include="$(SourceFolder)Website\Install\Skin\*.zip"/>
    <ContainerPackages Include="$(SourceFolder)Website\Install\Container\*.zip"/>
  </ItemGroup>

  <Target Name="VersionCheck">
    <!-- This target is responsible to read version from AssemblyInfo file (note last AutoIncrementVersion=False) -->
    <IncrementBuildNumber FilePath="$(SourceCompletePath)Library\AssemblyInfo.vb" AutoIncrementVersion="false">
      <Output TaskParameter="BuildVersion" PropertyName="BuildVersion">
      </Output>
      <Output TaskParameter="ReleaseVersion" PropertyName="ReleaseVersion">
      </Output>
    </IncrementBuildNumber>
    <CreateProperty Condition="'$(VersionType)'=='Release'" Value="$(ReleaseVersion).Release">
      <Output TaskParameter="Value" PropertyName="BuildVersion" />
    </CreateProperty>
    <Message Text="Zip Version : $(BuildVersion)" />
  </Target>

  <Target Name="Compile" DependsOnTargets="VersionCheck">
    <Message Text="DotNetNuke Build started  : part of path is  thats it " />

    <Copy SourceFiles="$(SourceFolder)Library\Components\Telerik\bin\Telerik.Web.UI.dll" DestinationFiles="$(SourceFolder)Website\bin\Telerik.Web.UI.dll" />

    <!-- Copy release.config to web.config for Precompiling to work -->
    <Copy SourceFiles="$(SourceFolder)Website\release.config" DestinationFiles="$(SourceFolder)Website\web.config" />
    <!-- Do the build thing -->
    <MSBuild Projects="$(SourceFolder)DotNetNuke_VS2008.sln" Properties="Configuration=Release;Platform=Any CPU" Targets="Rebuild" />

    <!--Remove PreCompiled directory it is of no use.-->
    <RemoveDir Directories="$(SourceFolder)PreCompiled" ContinueOnError="true" />
    <RemoveDir Directories="$(SourceFolder)PrecompiledWeb" ContinueOnError="true" />

    <Message Text="DotNetNuke Compile Complete" />
  </Target>

  <Target Name="VSTemplate" DependsOnTargets="VersionCheck">

    <!-- Next all steps are placed to create VSTemplate -->


    <!-- Need to create a new Item collection dynamically otherwise web.config (which was copied during the build) will not be copied -->
    <CreateItem Include="$(SourceFolder)Website\**\*.*" Exclude="@(DefaultExclude); @(InstallExclude)" >
      <Output TaskParameter="Include" ItemName="StarterKitProjectFiles" />
    </CreateItem>

    <!-- Cleanup the old starter kit directory to ensure we don't have any old files -->
    <RemoveDir ContinueOnError="true" Directories="$(SourceFolder)Starter Kit" />

    <!-- Copy the files for the starter kit project to the project directory -->
    <Copy SourceFiles="@(StarterKitProjectFiles)" DestinationFolder="$(SourceFolder)Starter Kit\Project\%(RecursiveDir)" />
    <!-- Build the new DotNetNuke.vstemplate file that contains all the files for the starter kit project -->
    <CreateVSTemplate RootPath="$(SourceFolder)Starter Kit\Project" OutputPath="$(SourceFolder)Website" Name="$(Name)" ProjectType="$(ProjectType)" ProjectSubType="$(ProjectSubType)" SortOrder="$(SortOrder)" DefaultName="$(DefaultName)" ProvideDefaultName="$(ProvideDefaultName)" PromptForSaveOnCreation="$(PromptForSaveOnCreation)" EnableEditOfLocationField="$(EnableEditOfLocationField)" EnableLocationBrowseButton="$(EnableLocationBrowseButton)" LocationField="$(LocationField)" Icon="$(Icon)" />
  </Target>

  <!-- The packages will only be created on a forced build !! -->
  <Target Name="Zip" DependsOnTargets="VSTemplate" Condition="'$(CCNetBuildCondition)'== 'ForceBuild'">
    <GetAbsolutePath RootPath="$(MSBuildProjectDirectory)" RelativePath="$(PackageDirectory)">
      <Output TaskParameter="AbsolutePath" PropertyName="PackageDirectory" />
    </GetAbsolutePath>

    <MakeDir Directories="$(PackageDirectory)\$(ProjectSecName)\$(BuildVersion)" />

    <!-- Creating Symbols Package Zip -->
    <!-- Need to create a new Item collection dynamically to pick up the generated .pdb files and .xml files -->
    <CreateItem Include="$(SourceCompletePath)website\bin\**\*.pdb; $(SourceCompletePath)website\bin\**\*.xml">
      <Output TaskParameter="Include" ItemName="SymbolsPackageResources" />
    </CreateItem>

    <Zip Files="@(SymbolsPackageResources)" WorkingDirectory="$(SourceCompletePath)Website\"
			 ZipFileName="$(SourceCompletePath)symbols\Resources.zip" />

    <CreateItem Include="$(SourceCompletePath)Symbols\*.*;">
      <Output TaskParameter="Include" ItemName="SymbolsPackage" />
    </CreateItem>

    <Zip Files="@(SymbolsPackage)" WorkingDirectory="$(SourceCompletePath)Symbols\"
			 ZipFileName="$(PackageDirectory)\$(ProjectSecName)\$(BuildVersion)\DotNetNuke_Community_$(BuildVersion)_Symbols.zip" />
    <Delete Files="$(SymbolsPackageResources)" />
    
    <RemoveNode FileName="$(SourceFolder)\Library\Providers\SchedulingProviders\DNNScheduler\Provider.DNNScheduler.vbproj"
                XPath="Import" Attribute="Project" AttributeValue="..\..\..\..\BuildScripts\ProviderPackage.Targets"/>
    
    <RemoveNode FileName="$(SourceFolder)\Library\Providers\CachingProviders\FileBasedCachingProvider\Provider.Caching.FileBasedCachingProvider.vbproj"
                XPath="Import" Attribute="Project" AttributeValue="..\..\..\..\BuildScripts\ProviderPackage.Targets"/>
    
    <RemoveNode FileName="$(SourceFolder)\Library\Providers\LoggingProviders\DatabaseLoggingProvider\Provider.DBLoggingProvider.vbproj"
                XPath="Import" Attribute="Project" AttributeValue="..\..\..\..\BuildScripts\ProviderPackage.Targets"/>
    
    <RemoveNode FileName="$(SourceFolder)\Library\Providers\MembershipProviders\AspNetMembershipProvider\Provider.Membership.AspNetProvider.vbproj"
                XPath="Import" Attribute="Project" AttributeValue="..\..\..\..\BuildScripts\MembershipProviderPackage.Targets"/>
    
    <RemoveNode FileName="$(SourceFolder)\Library\Providers\MembershipProviders\DNNMembershipProvider\Provider.Membership.DNNProvider.vbproj"
                XPath="Import" Attribute="Project" AttributeValue="..\..\..\..\BuildScripts\MembershipProviderPackage.Targets"/>
    
    <RemoveNode FileName="$(SourceFolder)\Library\Providers\ModuleCachingProviders\Provider.ModuleCaching.FileProvider\Provider.ModuleCaching.FileProvider.vbproj"
                XPath="Import" Attribute="Project" AttributeValue="..\..\..\..\BuildScripts\ProviderPackage.Targets"/>

    <RemoveNode FileName="$(SourceFolder)\Library\Providers\ModuleCachingProviders\Provider.ModuleCaching.MemoryProvider\Provider.ModuleCaching.MemoryProvider.vbproj"
                XPath="Import" Attribute="Project" AttributeValue="..\..\..\..\BuildScripts\ProviderPackage.Targets"/>

    <RemoveNode FileName="$(SourceFolder)\Library\Providers\NavigationProviders\ASP2MenuNavigationProvider\Provider.ASP2MenuNavigationProvider.vbproj"
                XPath="Import" Attribute="Project" AttributeValue="..\..\..\..\BuildScripts\ProviderPackage.Targets"/>

    <RemoveNode FileName="$(SourceFolder)\Library\Providers\NavigationProviders\DNNDropDownNavigationProvider\Provider.DNNDropDownNavigationProvider.vbproj"
                XPath="Import" Attribute="Project" AttributeValue="..\..\..\..\BuildScripts\ProviderPackage.Targets"/>

    <RemoveNode FileName="$(SourceFolder)\Library\Providers\NavigationProviders\DNNMenuNavigationProvider\Provider.DNNMenuNavigationProvider.vbproj"
                XPath="Import" Attribute="Project" AttributeValue="..\..\..\..\BuildScripts\ProviderPackage.Targets"/>

    <RemoveNode FileName="$(SourceFolder)\Library\Providers\NavigationProviders\DNNTreeNavigationProvider\Provider.DNNTreeNavigationProvider.vbproj"
                XPath="Import" Attribute="Project" AttributeValue="..\..\..\..\BuildScripts\ProviderPackage.Targets"/>

    <RemoveNode FileName="$(SourceFolder)\Library\Providers\PermissionProviders\CorePermissionProvider\Provider.CorePermissionProvider.vbproj"
                XPath="Import" Attribute="Project" AttributeValue="..\..\..\..\BuildScripts\ProviderPackage.Targets"/>

    <RemoveNode FileName="$(SourceFolder)\Library\Providers\SearchProviders\ModuleIndexer\Provider.Search.Index.vbproj"
                XPath="Import" Attribute="Project" AttributeValue="..\..\..\..\BuildScripts\ProviderPackage.Targets"/>

    <RemoveNode FileName="$(SourceFolder)\Library\Providers\SearchProviders\SearchDataStore\Provider.Search.DataStore.vbproj"
                XPath="Import" Attribute="Project" AttributeValue="..\..\..\..\BuildScripts\ProviderPackage.Targets"/>

    <RemoveNode FileName="$(SourceFolder)\Modules\HTML\DotNetNuke.Modules.Html.vbproj"
                XPath="Import" Attribute="Project" AttributeValue="..\..\BuildScripts\ModulePackage.Targets"/>

    <Zip Files="@(SourceZipFile)" WorkingDirectory="$(SourceFolder)"
			 ZipFileName="$(PackageDirectory)\$(ProjectSecName)\$(BuildVersion)\DotNetNuke_Community_$(BuildVersion)_Source.zip" />

    <Zip Files="@(InstallZipFile)" WorkingDirectory="$(SourceFolder)Website"
			 ZipFileName="$(PackageDirectory)\$(ProjectSecName)\$(BuildVersion)\DotNetNuke_Community_$(BuildVersion)_Install.zip" />

    <CreateItem Include="$(SourceFolder)Website\Install\Skin\*.zip;">
      <Output TaskParameter="Include" ItemName="SkinPackages" />
    </CreateItem>

    <CreateItem Include="$(SourceFolder)Website\Install\Container\*.zip;">
      <Output TaskParameter="Include" ItemName="ContainerPackages" />
    </CreateItem>

    <Copy SourceFiles="@(SkinPackages)" DestinationFiles="@(SkinPackages->'$(SourceFolder)Website\Install\Skin\%(Filename).resources')" >
      <Output TaskParameter="CopiedFiles" ItemName="SuccessfullyCopiedFiles" />
    </Copy>

    <Copy SourceFiles="@(ContainerPackages)" DestinationFiles="@(ContainerPackages->'$(SourceFolder)Website\Install\Container\%(Filename).resources')" >
      <Output TaskParameter="CopiedFiles" ItemName="SuccessfullyCopiedFiles" />
    </Copy>

    <CreateItem Include="$(SourceFolder)Website\Install\Skin\*.resources;" >
      <Output TaskParameter="Include" ItemName="SkinPackageResourceFiles" />
    </CreateItem>

    <CreateItem Include="$(SourceFolder)Website\Install\Container\*.resources;" >
      <Output TaskParameter="Include" ItemName="ContainerPackageResourceFiles" />
    </CreateItem>

    <Zip Files="@(UpgradeZipFile);@(SkinPackageResourceFiles);@(ContainerPackageResourceFiles)" WorkingDirectory="$(SourceFolder)Website"
			 ZipFileName="$(PackageDirectory)\$(ProjectSecName)\$(BuildVersion)\DotNetNuke_Community_$(BuildVersion)_Upgrade.zip" />

    <Message Importance="high" Text="PackageUrl:$(PackageBaseUrl)$(BuildVersion)/DotNetNuke_Community_$(BuildVersion)_Source.zip" />
    <Message Importance="high" Text="PackageUrl:$(PackageBaseUrl)$(BuildVersion)/DotNetNuke_Community_$(BuildVersion)_Install.zip" />
    <Message Importance="high" Text="PackageUrl:$(PackageBaseUrl)$(BuildVersion)/DotNetNuke_Community_$(BuildVersion)_Upgrade.zip" />
  </Target>
</Project>