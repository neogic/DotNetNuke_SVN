<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="TestSetup" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

	<Import Project="$(MSBuildExtensionsPath)\MSBuildCommunityTasks\MSBuild.Community.Tasks.Targets" />
	<Import Project="AT.MSBuild.Tasks.Targets" />
	<UsingTask AssemblyFile="$(MSBuildCommunityTasksLib)" TaskName="MSBuild.Community.Tasks.IIS.WebDirectoryCreate" />

	<PropertyGroup>
		<DefaultVersion>05.00.00.00000</DefaultVersion>
		<ProjectSecName>DotNetNuke_5_Maintenance</ProjectSecName>
		<TestBaseUrl>http://build.dotnetnuke.com/Test/$(ProjectSecName)/</TestBaseUrl>
		<!-- Name of the directory where the packages are built (relatieve to working directory) -->
		<UpLevels>..\..\..\..\..\</UpLevels>
		<PackageDirectory>$(UpLevels)CCNet_Packages</PackageDirectory>
		<TestBasicPath>$(UpLevels)CCNet_TestInstalls\</TestBasicPath>
		<PrePackagePath>PredefinePackages\</PrePackagePath>
		<SourceFolder>..\..\</SourceFolder>
		<SourceCompletePath>$(MSBuildProjectDirectory)\$(SourceFolder)</SourceCompletePath>
		<!--SourceGear's Vault related properties-->
		<VaultApp>$(ProgramFilesDir)\sourcegear\Fortress client\vault.exe</VaultApp>
		<VaultCommonOptions>$(SGVaultOptions) Core_Development </VaultCommonOptions>
		<VaultRepository> $/DotNetNuke_5_Maintenance</VaultRepository>
		<VaultLegacyCommonOptions>$(SGVaultOptions) Core_Legacy </VaultLegacyCommonOptions>
	</PropertyGroup>

	<!-- Import Include/Exclude file lists from other file. -->
	<Import Project="FileList.msbuild" />
	
	<Target Name="VersionCheck">
		<!-- This target is responsible to read version from AssemblyInfo file (note last AutoIncrementVersion=False) -->
		<IncrementBuildNumber FilePath="$(SourceCompletePath)Library\AssemblyInfo.vb" AutoIncrementVersion="false">
			<Output TaskParameter="BuildVersion" PropertyName="BuildVersion">
			</Output>
			<Output TaskParameter="ReleaseVersion" PropertyName="ReleaseVersion">
			</Output>
		</IncrementBuildNumber>
		<CreateProperty Condition="'$(VersionType)'=='Release'" Value="$(ReleaseVersion).Release">
			<Output TaskParameter="Value" PropertyName="BuildVersion" />
		</CreateProperty>
		<Message Text="Zip Version : $(BuildVersion)" />
	</Target>

	<!-- The packages will only be created on a forced build !! -->
	<Target Name="TestSetup" DependsOnTargets="VersionCheck" Condition="'$(CCNetBuildCondition)'== 'ForceBuild'">

		<GetAbsolutePath RootPath="$(MSBuildProjectDirectory)" RelativePath="$(TestBasicPath)">
			<Output TaskParameter="AbsolutePath" PropertyName="TestBasicPath" />
		</GetAbsolutePath>

		<MakeDir Directories="$(TestBasicPath)\$(ProjectSecName)\$(BuildVersion)\pSource" />
		<MakeDir Directories="$(TestBasicPath)\$(ProjectSecName)\$(BuildVersion)\pInstall" />

		<Unzip ContinueOnError="true" TargetDirectory="$(TestBasicPath)\$(ProjectSecName)\$(BuildVersion)\pSource"
			   ZipFileName="$(PackageDirectory)\$(ProjectSecName)\$(BuildVersion)\DotNetNuke_$(BuildVersion)_Source.zip" />
		<Unzip ContinueOnError="true" TargetDirectory="$(TestBasicPath)\$(ProjectSecName)\$(BuildVersion)\pInstall"
			   ZipFileName="$(PackageDirectory)\$(ProjectSecName)\$(BuildVersion)\DotNetNuke_$(BuildVersion)_Install.zip" />

		<Copy ContinueOnError="true" SourceFiles="$(TestBasicPath)\$(ProjectSecName)\$(BuildVersion)\pSource\Website\Release.config"
			  DestinationFiles="$(TestBasicPath)$(ProjectSecName)\$(BuildVersion)\pSource\Website\Web.config" />

		<Copy ContinueOnError="true" SourceFiles="$(TestBasicPath)\$(ProjectSecName)\$(BuildVersion)\pInstall\Release.config"
			  DestinationFiles="$(TestBasicPath)$(ProjectSecName)\$(BuildVersion)\pInstall\Web.config" />

		<WebDirectoryCreate VirtualDirectoryName="Test/$(ProjectSecName)/$(BuildVersion)/pSource/Website"
							VirtualDirectoryPhysicalPath="$(TestBasicPath)$(ProjectSecName)\$(BuildVersion)\pSource\Website" />
		<WebDirectoryCreate VirtualDirectoryName="Test/$(ProjectSecName)/$(BuildVersion)/pInstall"
							VirtualDirectoryPhysicalPath="$(TestBasicPath)$(ProjectSecName)\$(BuildVersion)\pInstall" />

		<Message Importance="high" Text="TestUrl:$(TestBaseUrl)$(BuildVersion)/pSource/Website/" />
		<Message Importance="high" Text="TestUrl:$(TestBaseUrl)$(BuildVersion)/pInstall/" />
		<Message Importance="high" Text="TestUrl:$(TestBaseUrl)" />

	</Target>
</Project>